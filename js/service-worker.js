try{self["workbox:core:5.1.4"]&&_()}catch(e){}const e={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},t=t=>[e.prefix,t,e.suffix].filter(e=>e&&e.length>0).join("-"),n=n=>n||t(e.precache),i=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),""),s=(e,...t)=>{let n=e;return t.length>0&&(n+=" :: "+JSON.stringify(t)),n};class c extends Error{constructor(e,t){super(s(e,t)),this.name=e,this.details=t}}const o=new Set;const a=(e,t)=>e.filter(e=>t in e),r=async({request:e,mode:t,plugins:n=[]})=>{const i=a(n,"cacheKeyWillBeUsed");let s=e;for(const e of i)s=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:s}),"string"==typeof s&&(s=new Request(s));return s},u=async({cacheName:e,request:t,event:n,matchOptions:i,plugins:s=[]})=>{const c=await self.caches.open(e),o=await r({plugins:s,request:t,mode:"read"});let a=await c.match(o,i);for(const t of s)if("cachedResponseWillBeUsed"in t){const s=t.cachedResponseWillBeUsed;a=await s.call(t,{cacheName:e,event:n,matchOptions:i,cachedResponse:a,request:o})}return a},f=async({cacheName:e,request:t,response:n,event:s,plugins:f=[],matchOptions:l})=>{const d=await r({plugins:f,request:t,mode:"write"});if(!n)throw new c("cache-put-with-no-response",{url:i(d.url)});const h=await(async({request:e,response:t,event:n,plugins:i=[]})=>{let s=t,c=!1;for(const t of i)if("cacheWillUpdate"in t){c=!0;const i=t.cacheWillUpdate;if(s=await i.call(t,{request:e,response:s,event:n}),!s)break}return c||(s=s&&200===s.status?s:void 0),s||null})({event:s,plugins:f,response:n,request:d});if(!h)return;const w=await self.caches.open(e),p=a(f,"cacheDidUpdate"),g=p.length>0?await u({cacheName:e,matchOptions:l,request:d}):null;try{await w.put(d,h)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of o)await e()}(),e}for(const t of p)await t.cacheDidUpdate.call(t,{cacheName:e,event:s,oldResponse:g,newResponse:h,request:d})},l=async({request:e,fetchOptions:t,event:n,plugins:i=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const s=a(i,"fetchDidFail"),o=s.length>0?e.clone():null;try{for(const t of i)if("requestWillFetch"in t){const i=t.requestWillFetch,s=e.clone();e=await i.call(t,{request:s,event:n})}}catch(e){throw new c("plugin-error-request-will-fetch",{thrownError:e})}const r=e.clone();try{let s;s="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of i)"fetchDidSucceed"in e&&(s=await e.fetchDidSucceed.call(e,{event:n,request:r,response:s}));return s}catch(e){for(const t of s)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:o.clone(),request:r.clone()});throw e}};let d;async function h(e,t){const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},s=t?t(i):i,c=function(){if(void 0===d){const e=new Response("");if("body"in e)try{new Response(e.body),d=!0}catch(e){d=!1}d=!1}return d}()?n.body:await n.blob();return new Response(c,s)}try{self["workbox:precaching:5.1.4"]&&_()}catch(e){}function w(e){if(!e)throw new c("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:n}=e;if(!n)throw new c("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const i=new URL(n,location.href),s=new URL(n,location.href);return i.searchParams.set("__WB_REVISION__",t),{cacheKey:i.href,url:s.href}}class p{constructor(e){this.t=n(e),this.i=new Map,this.s=new Map,this.o=new Map}addToCacheList(e){const t=[];for(const n of e){"string"==typeof n?t.push(n):n&&void 0===n.revision&&t.push(n.url);const{cacheKey:e,url:i}=w(n),s="string"!=typeof n&&n.revision?"reload":"default";if(this.i.has(i)&&this.i.get(i)!==e)throw new c("add-to-cache-list-conflicting-entries",{firstEntry:this.i.get(i),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.o.has(e)&&this.o.get(e)!==n.integrity)throw new c("add-to-cache-list-conflicting-integrities",{url:i});this.o.set(e,n.integrity)}if(this.i.set(i,e),this.s.set(i,s),t.length>0){const e="Workbox is precaching URLs without revision info: "+t.join(", ")+"\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache";console.warn(e)}}}async install({event:e,plugins:t}={}){const n=[],i=[],s=await self.caches.open(this.t),c=await s.keys(),o=new Set(c.map(e=>e.url));for(const[e,t]of this.i)o.has(t)?i.push(e):n.push({cacheKey:t,url:e});const a=n.map(({cacheKey:n,url:i})=>{const s=this.o.get(n),c=this.s.get(i);return this.u({cacheKey:n,cacheMode:c,event:e,integrity:s,plugins:t,url:i})});await Promise.all(a);return{updatedURLs:n.map(e=>e.url),notUpdatedURLs:i}}async activate(){const e=await self.caches.open(this.t),t=await e.keys(),n=new Set(this.i.values()),i=[];for(const s of t)n.has(s.url)||(await e.delete(s),i.push(s.url));return{deletedURLs:i}}async u({cacheKey:e,url:t,cacheMode:n,event:i,plugins:s,integrity:o}){const a=new Request(t,{integrity:o,cache:n,credentials:"same-origin"});let r,u=await l({event:i,plugins:s,request:a});for(const e of s||[])"cacheWillUpdate"in e&&(r=e);if(!(r?await r.cacheWillUpdate({event:i,request:a,response:u}):u.status<400))throw new c("bad-precaching-response",{url:t,status:u.status});u.redirected&&(u=await h(u)),await f({event:i,plugins:s,response:u,request:e===t?a:new Request(e),cacheName:this.t,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.i}getCachedURLs(){return[...this.i.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.i.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,n=this.getCacheKeyForURL(t);if(n){return(await self.caches.open(this.t)).match(n)}}createHandler(e=!0){return async({request:t})=>{try{const e=await this.matchPrecache(t);if(e)return e;throw new c("missing-precache-entry",{cacheName:this.t,url:t instanceof Request?t.url:t})}catch(n){if(e)return fetch(t);throw n}}}createHandlerBoundToURL(e,t=!0){if(!this.getCacheKeyForURL(e))throw new c("non-precached-url",{url:e});const n=this.createHandler(t),i=new Request(e);return()=>n({request:i})}}let g;const y=()=>(g||(g=new p),g);const b=(e,t)=>{const n=y().getURLsToCacheKeys();for(const i of function*(e,{ignoreURLParametersMatching:t,directoryIndex:n,cleanURLs:i,urlManipulation:s}={}){const c=new URL(e,location.href);c.hash="",yield c.href;const o=function(e,t=[]){for(const n of[...e.searchParams.keys()])t.some(e=>e.test(n))&&e.searchParams.delete(n);return e}(c,t);if(yield o.href,n&&o.pathname.endsWith("/")){const e=new URL(o.href);e.pathname+=n,yield e.href}if(i){const e=new URL(o.href);e.pathname+=".html",yield e.href}if(s){const e=s({url:c});for(const t of e)yield t.href}}(e,t)){const e=n.get(i);if(e)return e}};let m=!1;function v(e){m||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:i=!0,urlManipulation:s}={})=>{const c=n();self.addEventListener("fetch",n=>{const o=b(n.request.url,{cleanURLs:i,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:s});if(!o)return;let a=self.caches.open(c).then(e=>e.match(o)).then(e=>e||fetch(o));n.respondWith(a)})})(e),m=!0)}const R=[],q={get:()=>R,add(e){R.push(...e)}},U=e=>{const t=y(),n=q.get();e.waitUntil(t.install({event:e,plugins:n}).catch(e=>{throw e}))},x=e=>{const t=y();e.waitUntil(t.activate())};var L;self.addEventListener("install",()=>self.skipWaiting()),self.addEventListener("activate",()=>self.clients.claim()),L={},function(e){y().addToCacheList(e),e.length>0&&(self.addEventListener("install",U),self.addEventListener("activate",x))}([{url:"/bruga-music/./index.html",revision:"00b7b19de0782ebef5167c68335902e5"},{url:"/bruga-music/icons/android/icon_144x144.png",revision:"bdd075fe43df60846be515dddd6165fe"},{url:"/bruga-music/icons/android/icon_192x192.png",revision:"17d34862a62bf16ec6a173a3ef54843d"},{url:"/bruga-music/icons/android/icon_256x256.png",revision:"a35f0e4a2ec858e185b29eaf83bfc168"},{url:"/bruga-music/icons/android/icon_36x36.png",revision:"6371261773c9b496da46d48bc15c2ba6"},{url:"/bruga-music/icons/android/icon_48x48.png",revision:"2680b1cc0e74990c741af57e2984f3d4"},{url:"/bruga-music/icons/android/icon_72x72.png",revision:"76f4aacaefbc37aae522d6d2d86fd6e3"},{url:"/bruga-music/icons/android/icon_96x96.png",revision:"1ab53f497c26e56c2f3248c9d9f990a3"},{url:"/bruga-music/icons/ios/icon_144x144.png",revision:"bdd075fe43df60846be515dddd6165fe"},{url:"/bruga-music/icons/ios/icon_192x192.png",revision:"17d34862a62bf16ec6a173a3ef54843d"},{url:"/bruga-music/icons/ios/icon_256x256.png",revision:"a35f0e4a2ec858e185b29eaf83bfc168"},{url:"/bruga-music/icons/ios/icon_36x36.png",revision:"6371261773c9b496da46d48bc15c2ba6"},{url:"/bruga-music/icons/ios/icon_48x48.png",revision:"2680b1cc0e74990c741af57e2984f3d4"},{url:"/bruga-music/icons/ios/icon_72x72.png",revision:"76f4aacaefbc37aae522d6d2d86fd6e3"},{url:"/bruga-music/icons/ios/icon_96x96.png",revision:"1ab53f497c26e56c2f3248c9d9f990a3"},{url:"/bruga-music/logo.png",revision:"f48ff222a92586bd00fe792ab2c4b7c1"}]),v(L),self.addEventListener("activate",e=>{const t=n();e.waitUntil((async(e,t="-precache-")=>{const n=(await self.caches.keys()).filter(n=>n.includes(t)&&n.includes(self.registration.scope)&&n!==e);return await Promise.all(n.map(e=>self.caches.delete(e))),n})(t).then(e=>{}))});
